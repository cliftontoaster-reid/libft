name: CI
permissions:
  contents: read
  issues: read
  pull-requests: read
on:
  push:
    branches: [main]
    paths:
      - "**.c"
      - "**.h"
      - Makefile
      - tests/**
      - .github/workflows/ci.yml
  pull_request:
    branches: [main]
    paths:
      - "**.c"
      - "**.h"
      - Makefile
      - tests/**
      - .github/workflows/ci.yml

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04, ubuntu-24.04]
        compiler: [cc, gcc, clang]
        linker: [ld, lld, mold]
        exclude:
          - os: ubuntu-20.04
            linker: mold

    steps:
      - uses: actions/checkout@v4

      - name: Update package list
        run: sudo apt-get update

      - name: Install Base Dependencies
        run: |
          sudo apt-get install -y make valgrind python3 python3-pip

      - name: Install Compiler (GCC/CC)
        if: ${{ contains('gcc cc', matrix.compiler) }}
        run: sudo apt-get install -y gcc

      - name: Install Compiler (Clang)
        if: ${{ matrix.compiler == 'clang' }}
        run: sudo apt-get install -y clang

      - name: Install Linker (lld)
        if: ${{ matrix.linker == 'lld' }}
        run: sudo apt-get install -y lld

      - name: Install Linker (mold)
        if: ${{ matrix.linker == 'mold' }}
        run: sudo apt-get install -y mold

      - name: Cache CUnit
        uses: actions/cache@v4
        with:
          path: cache
          key: ${{ runner.os }}-cunit-${{ hashFiles('tests/Makefile') }}

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            target
            *.a
          key: ${{ runner.os }}-${{ matrix.compiler }}-build-${{ hashFiles('**/*.c', '**/*.h', 'Makefile') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-build-

      - name: Install Norminette
        run: |
          python -m pip install --upgrade pip
          pip install norminette

      - name: Run Norminette
        run: norminette --use-gitignore

      - name: Set compiler
        run: echo "CC=${{ matrix.compiler }}" >> $GITHUB_ENV

      - name: Build and Test
        run: |
          make re test
